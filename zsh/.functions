function path_remove() {
  # Delete path by parts so we can never accidentally remove sub paths
  PATH=${PATH/":$1:"/":"} # delete any instances in the middle
  PATH=${PATH/#"$1:"/}    # delete any instance at the beginning
  PATH=${PATH/%":$1"/}    # delete any instance at the end
}
function myuptime() {
  uptime | awk '{ print "Uptime:", $3, $4, $5 }' | sed 's/,//g'
  return
}

weather() {
  curl wttr.in/"$1"
}

function secret() {
  output="${HOME}/$(basename ${1}).$(date +%F).enc"
  gpg --encrypt --armor \
    --output ${output} \
    -r jason@thesavage.dev \
    "${1}" && echo "${1} -> ${output}"
}

function reveal() {
  output=$(echo "${1}" | rev | cut -c16- | rev)
  gpg --decrypt --output ${output} "${1}" && echo "${1} -> ${output}"
}

function domain() {
  awk -F "." '{print { $(NF-1)"."$(NF) }}' "${1}"
}

function gpg_restart() {
  pkill gpg
  pkill pinentry
  pkill ssh-agent
  eval $(gpg-agent --daemon --enable-ssh-support)
}

function lock() {
  date
  xhost &>/dev/null || return
  (
    sleep 1
    slock
  ) 2>/dev/null &
  sleep 1
  systemctl suspend
}

function v2g() {
    src="" # required
    target="" # optional (defaults to source file name)
    resolution="" # optional (defaults to source video resolution)
    fps=10 # optional (defaults to 10 fps -- helps drop frames)

    while [ $# -gt 0 ]; do
        if [[ $1 == *"--"* ]]; then
                param="${1/--/}"
                declare $param="$2"
        fi
        shift
    done

    if [[ -z $src ]]; then
        echo -e "\nPlease call 'v2g --src <source video file>' to run this command\n"
        return 1
    fi

    if [[ -z $target ]]; then
        target=$src
    fi

    basename=${target%.*}
    [[ ${#basename} = 0 ]] && basename=$target
    target="$basename.gif"

    if [[ -n $fps ]]; then
        fps="-r $fps"
    fi

    if [[ -n $resolution ]]; then
        resolution="-s $resolution"
    fi

    echo "ffmpeg -i "$src" -pix_fmt rgb8 $fps $resolution "$target" && gifsicle -O3 "$target" -o "$target""
    ffmpeg -i "$src" -pix_fmt rgb8 $fps $resolution "$target" && gifsicle -O3 "$target" -o "$target"
    osascript -e "display notification \"$target successfully converted and saved\" with title \"v2g complete\""
}
